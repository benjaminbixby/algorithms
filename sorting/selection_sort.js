// টেস্ট এ্যারে - এইটাকে আমরা সর্ট করবো
const list = [2, 1, 7, 3, 9, 8, 21, 45, 11, 3, 17];

// একটা এ্যারে দিলে এই ফাংশন আমাদের বলে দিবে সবচেয়ে ছোট ভ্যালুর ইনডেক্স কত
function min(list) {
    // প্রথম থেকে শুরু করি - m হলো মিনিমাম ভ্যালুর ইনডেক্স
    let m = 0;
    // সবগুলো আইটেম চেক করি
    for (let i = 1; i < list.length; i++) {
        // যদি কোন আইটেম m ইনডেক্স এ থাকা ভ্যালুর চেয়ে ছোট হলে এটাই হবে m এর নতুন ভ্যালু
        if (list[i] < list[m]) {
            m = i;
        }
    }

    // লুপ শেষ, m এই হলো সর্ব নিম্ন ভ্যালুর ইনডেক্স
    return m;
}


/*
    সিলেকশন সর্ট খুবই সহজ - নতুন একটা এ্যারে নিবো । এবার অরিজিনাল এ্যারে থেকে প্রতিবার সবচেয়ে ছোট সংখ্যা টা সরিয়ে নতুন
    এ্যারে তে নিয়ে আসবো । যখন সব গুলো আইটেম ট্রান্সফার করা শেষ হয়ে যাবে তখন অটোম্যাটিক্যালি নতুন এ্যারেতে সংখ্যাগুলো ছোট
    থেকে বড় আকারে সাজানো হয়ে যাবে ।

    সমস্যা একটাই - দুইদফা লুপ চালাতে হয় পুরো এ্যারে জুড়ে, তাই সময় লাগে O(N*N) বা O(N^2)
 */


function selectionSort(list) {
    // নতুন এ্যারে
    const sortedArray = [];
    // লিস্ট এর উপর লুপ চালাবো
    while (list.length) {
        // বর্তমান আইটেম গুলোর মধ্যে সবচেয়ে ছোট-টার ইনডেক্স কত?
        let minIndex = min(list);
        // splice করলে একটা নতুন এ্যারে পাওয়া যায় এক আইটেমওয়ালা, তাই ডিস্ট্রাকচারিং ব্যবহার করেছি
        let [value] = list.splice(minIndex, 1);
        // এই ভ্যালুটি পুশ করে দেই নতুন এ্যারে তে
        sortedArray.push(value)
    }

    // কাজ শেষ, এই নতুন এ্যারেতে আমাদের আগের সব ভ্যালু গুলো সর্টেড অবস্থায় আছে
    return sortedArray;
}

// টেস্ট করে দেখি!
const result = selectionSort(list);

console.log(result);